{"ast":null,"code":"import { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/user.service\";\nimport * as i2 from \"../_services/auth.service\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/slider\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/button\";\nexport let SettingsComponent = /*#__PURE__*/(() => {\n  class SettingsComponent {\n    constructor(userService, auth) {\n      this.userService = userService;\n      this.auth = auth;\n      this.calories = 2500;\n      this.minutes = 100;\n    }\n\n    ngOnInit() {\n      const userInfo = JSON.parse(JSON.stringify(this.auth.currentUserValue));\n      const user = userInfo._id;\n      console.log('Settings Init for ' + user);\n      this.userService.getGoals(user).pipe(first()).subscribe(data => {\n        //  this.alertService.success('Registration successful', true);\n        const parsedData = JSON.parse(JSON.stringify(data));\n        const caloriegoal = parsedData['caloriegoal'];\n        const minutegoal = parsedData['minutegoal'];\n        console.log('Get goals success! ' + JSON.stringify(data) + ' caloriegoal: ' + caloriegoal + ' minutegoal: ' + minutegoal);\n        this.calories = caloriegoal;\n        this.minutes = minutegoal;\n      }, error => {\n        console.log('Error:', error);\n      });\n    }\n\n    handleButton() {\n      console.log('Setting Goals!');\n      this.userService.setGoals(this.calories, this.minutes).pipe(first()).subscribe(data => {\n        //  this.alertService.success('Registration successful', true);\n        console.log('set goals success');\n      }, error => {\n        console.log('Error:', error);\n      });\n    }\n\n  }\n\n  SettingsComponent.ɵfac = function SettingsComponent_Factory(t) {\n    return new (t || SettingsComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n\n  SettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingsComponent,\n    selectors: [[\"app-settings\"]],\n    decls: 18,\n    vars: 4,\n    consts: [[1, \"centeredBox\"], [1, \"example-card\"], [\"vertical\", \"true\", \"min\", \"1000\", \"max\", \"3000\", \"thumbLabel\", \"true\", 3, \"value\", \"valueChange\"], [\"vertical\", \"true\", \"min\", \"30\", \"max\", \"360\", 3, \"value\", \"valueChange\"], [\"matInput\", \"\", \"type\", \"number\", \"min\", \"1000\", \"max\", \"3000\", \"placeholder\", \"Calories\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"number\", \"min\", \"30\", \"max\", \"360\", \"placeholder\", \"Minutes\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-stroked-button\", \"\", 3, \"click\"]],\n    template: function SettingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\");\n        i0.ɵɵelementStart(2, \"mat-card-header\", 1);\n        i0.ɵɵelementStart(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Goal setting\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-card-content\");\n        i0.ɵɵelementStart(6, \"mat-slider\", 2);\n        i0.ɵɵlistener(\"valueChange\", function SettingsComponent_Template_mat_slider_valueChange_6_listener($event) {\n          return ctx.calories = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-slider\", 3);\n        i0.ɵɵlistener(\"valueChange\", function SettingsComponent_Template_mat_slider_valueChange_7_listener($event) {\n          return ctx.minutes = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 0);\n        i0.ɵɵelementStart(9, \"mat-card\");\n        i0.ɵɵelementStart(10, \"mat-card-content\");\n        i0.ɵɵelementStart(11, \"mat-form-field\");\n        i0.ɵɵelementStart(12, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function SettingsComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.calories = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\");\n        i0.ɵɵelementStart(14, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function SettingsComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.minutes = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-card-actions\");\n        i0.ɵɵelementStart(16, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function SettingsComponent_Template_button_click_16_listener() {\n          return ctx.handleButton();\n        });\n        i0.ɵɵtext(17, \" Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"value\", ctx.calories);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.minutes);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.calories);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.minutes);\n      }\n    },\n    directives: [i3.MatCard, i3.MatCardHeader, i3.MatCardTitle, i3.MatCardContent, i4.MatSlider, i5.MatFormField, i6.MatInput, i7.MinValidator, i7.MaxValidator, i7.NumberValueAccessor, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgModel, i3.MatCardActions, i8.MatButton],\n    styles: [\"input.vertical[_ngcontent-%COMP%]{-webkit-appearance:slider-vertical;writing-mode:bt-lr}.centeredBox[_ngcontent-%COMP%]{width:400px;height:200px;margin-left:auto;margin-right:auto;text-align:center}.example-card[_ngcontent-%COMP%]{margin:0 auto;width:40%}\"]\n  });\n  return SettingsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}