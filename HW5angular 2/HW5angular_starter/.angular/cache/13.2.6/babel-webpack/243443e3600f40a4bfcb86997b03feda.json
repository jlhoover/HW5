{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { PARecord } from '../_models/PARecord';\nimport { NotificationService } from '../_services/notification.service';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/notification.service\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/material/tooltip\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/progress-bar\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/menu\";\nimport * as i8 from \"@angular/common\";\n\nconst _c0 = function (a0) {\n  return [a0];\n};\n\nexport let ParecordComponent = /*#__PURE__*/(() => {\n  class ParecordComponent {\n    constructor(notifService) {\n      this.notifService = notifService;\n      this.deleteEvent = new EventEmitter();\n      this.mode = 'determinate';\n      this.bufferValue = 0;\n      this.activities = ['directions_walk', 'directions_run', 'directions_bike'];\n      this.color = 'primary';\n      this.activity = this.activities[0];\n      this.calprogressvalue = 0;\n      this.minprogressvalue = 0;\n    }\n\n    delete(date) {\n      this.deleteEvent.emit(date);\n    }\n\n    notImplemented(message) {\n      this.notifService.notImplementedWarning(message);\n    }\n\n    ngOnInit() {\n      this.activity = this.activities[this.parecord.activityType]; //TODO: DONE use userService to get the goal values corresponding the username that created the parecord and then use the obtained values to properly visualize the progress towards the goal.\n\n      this.userService.getGoals(this.parecord.createdBy).pipe(first()).subscribe(data => {\n        //  this.alertService.success('Registration successful', true);\n        const parsedData = JSON.parse(JSON.stringify(data));\n        const caloriegoal = parsedData['caloriegoal'];\n        const minutegoal = parsedData['minutegoal'];\n        console.log('Get goals success! ' + JSON.stringify(data) + ' caloriegoal: ' + caloriegoal + ' minutegoal: ' + minutegoal);\n        this.calprogressvalue = Math.round(this.parecord.calories / caloriegoal * 100);\n        this.minprogressvalue = Math.round(this.parecord.minutes / minutegoal * 100);\n      }, error => {\n        console.log('Error:', error);\n      }); //\n      //\n    }\n\n  }\n\n  ParecordComponent.ɵfac = function ParecordComponent_Factory(t) {\n    return new (t || ParecordComponent)(i0.ɵɵdirectiveInject(i1.NotificationService));\n  };\n\n  ParecordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ParecordComponent,\n    selectors: [[\"parecord-component\"]],\n    inputs: {\n      parecord: \"parecord\"\n    },\n    outputs: {\n      deleteEvent: \"deleteEvent\"\n    },\n    decls: 34,\n    vars: 22,\n    consts: [[1, \"parecord-card\", 3, \"matTooltip\"], [1, \"date\"], [1, \"type\"], [1, \"titlecal\"], [1, \"titletime\"], [1, \"calories\"], [1, \"example-margin\", 3, \"color\", \"mode\", \"value\", \"bufferValue\"], [1, \"time\"], [1, \"caloriesgoal\"], [1, \"timegoal\"], [1, \"menu\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Delete or edit\", 3, \"matMenuTriggerFor\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\"]],\n    template: function ParecordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵpipe(3, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-icon\", 2);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"section\", 5);\n        i0.ɵɵelement(11, \"mat-progress-bar\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"section\", 7);\n        i0.ɵɵelement(13, \"mat-progress-bar\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 8);\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 9);\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 10);\n        i0.ɵɵelementStart(19, \"button\", 11);\n        i0.ɵɵelementStart(20, \"mat-icon\");\n        i0.ɵɵtext(21, \"more_vert\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-menu\", null, 12);\n        i0.ɵɵelementStart(24, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function ParecordComponent_Template_button_click_24_listener() {\n          return ctx.notImplemented(\"Edit activity\");\n        });\n        i0.ɵɵelementStart(25, \"mat-icon\");\n        i0.ɵɵtext(26, \"edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"span\");\n        i0.ɵɵtext(28, \"Edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function ParecordComponent_Template_button_click_29_listener() {\n          return ctx.delete(ctx.parecord.createdDate);\n        });\n        i0.ɵɵelementStart(30, \"mat-icon\");\n        i0.ɵɵtext(31, \"delete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"span\");\n        i0.ɵɵtext(33, \"Delete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(23);\n\n        i0.ɵɵproperty(\"matTooltip\", ctx.parecord.createdName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 16, ctx.parecord.createdDate));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.activity);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.parecord.calories, \" Cal\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.parecord.minutes, \" Min\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"color\", ctx.color)(\"mode\", ctx.mode)(\"value\", i0.ɵɵpureFunction1(18, _c0, ctx.calprogressvalue))(\"bufferValue\", ctx.bufferValue);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"color\", ctx.color)(\"mode\", ctx.mode)(\"value\", i0.ɵɵpureFunction1(20, _c0, ctx.minprogressvalue))(\"bufferValue\", ctx.bufferValue);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.calprogressvalue, \"%\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.minprogressvalue, \"%\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"matMenuTriggerFor\", _r0);\n      }\n    },\n    directives: [i2.MatCard, i3.MatTooltip, i4.MatIcon, i5.MatProgressBar, i6.MatButton, i7.MatMenuTrigger, i7.MatMenu, i7.MatMenuItem],\n    pipes: [i8.DatePipe],\n    styles: [\".date[_ngcontent-%COMP%]{grid-area:date}.menu[_ngcontent-%COMP%]{grid-area:menu;justify-self:end;align-self:start}.type[_ngcontent-%COMP%]{grid-area:type;height:48px!important;width:48px!important;font-size:48px!important}.titlecal[_ngcontent-%COMP%]{grid-area:titlecal}.titletime[_ngcontent-%COMP%]{grid-area:titletime}.calories[_ngcontent-%COMP%]{grid-area:calories}.time[_ngcontent-%COMP%]{grid-area:time}.caloriesgoal[_ngcontent-%COMP%]{grid-area:caloriesgoal;align-self:end}.timegoal[_ngcontent-%COMP%]{grid-area:timegoal;align-self:end}.parecord-card[_ngcontent-%COMP%]{display:grid;grid-template-columns:50px 50px 50px 50px 50px;grid-template-rows:75px;grid-template-areas:\\\"date date date type menu\\\" \\\"titlecal titlecal . titletime titletime\\\" \\\"calories calories . time time\\\" \\\"caloriesgoal . .  timegoal .\\\"}\"]\n  });\n  return ParecordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}