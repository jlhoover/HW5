{"ast":null,"code":"import { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(auth, router) {\n      this.auth = auth;\n      this.router = router;\n    }\n\n    canActivate(route, state) {\n      const currentUser = this.auth.currentUserValue;\n\n      if (currentUser) {\n        // check if route is restricted by role\n        if (route.data.roles && route.data.roles.indexOf(currentUser.role) === -1) {\n          // role not authorised so redirect to home page\n          this.router.navigate(['/']);\n          return false;\n        }\n\n        return true;\n      }\n\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}